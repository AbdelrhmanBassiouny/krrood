import os
import pytest


def test_generation_process():
    """
    Test that the SQLAlchemy interface was generated correctly.
    
    This test verifies that the sqlalchemy_interface.py file was generated
    by the pytest_configure hook and contains the expected content.
    The actual generation happens in conftest.py before tests run.
    """
    # Verify that the file was created
    file_path = os.path.join(
        os.path.dirname(__file__), "..", "dataset", "sqlalchemy_interface.py"
    )
    assert os.path.exists(file_path)
    
    # Verify that the file has the expected header
    with open(file_path, "r") as f:
        content = f.read()
        assert "# Generated by ORMatic" in content
        assert "DeclarativeBase" in content
        assert "class Base(DeclarativeBase):" in content
        
    # Verify we can import from the generated file
    from dataset import sqlalchemy_interface
    assert hasattr(sqlalchemy_interface, "Base")
    
    # Verify that expected DAO classes exist
    assert hasattr(sqlalchemy_interface, "TransformationMappedDAO")
    assert hasattr(sqlalchemy_interface, "PositionDAO")
    assert hasattr(sqlalchemy_interface, "AtomDAO")
